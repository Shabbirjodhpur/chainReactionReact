{"version":3,"sources":["component/Data.js","component/Cell.js","component/Row.js","component/chainReaction.js","component/Container.js","App.js","reportWebVitals.js","index.js"],"names":["intialState","i","j","push","count","player","pos","Cell","colors","index","this","props","playersList","indexOf","cellData","myStyle","padding","backgroundColor","getColor","border","margin","boxShadow","height","width","style","onClick","handle","React","Component","Row","cellList","rowData","map","cell","chainReaction","newState","x","y","multiply","length","inBound","oldPlayer","allNeighbours","filter","unit","checkValid","getNeighbours","a","b","Container","steps","win","state","data","initialState","increment","bind","handleChange","updatePlayer","first_saw","setState","prevState","Math","floor","check","new_player","checkWin","row","rowLists","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e2ff3a.chunk.js","sourcesContent":["const height=10\r\nconst width=10\r\nvar intialState = []\r\nfor(let i=0;i<height;i++){\r\n    intialState[i]=[]\r\n    for(let j=0;j<width;j++){\r\n        intialState[i].push({count:0,player:null,pos:(i*width+j)})\r\n    }\r\n}\r\n\r\nexport default intialState","import React from 'react'\r\n\r\nclass Cell extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.colors=[\"red\",\"green\"]\r\n    }\r\n    getColor(){\r\n        const index = this.props.playersList.indexOf(this.props.cellData.player)\r\n        return index===-1 ? \"white\":this.colors[index]\r\n    }\r\n    render(){\r\n        const color=this.getColor()\r\n        const myStyle={\r\n            padding:\"5px\",\r\n            backgroundColor:color,\r\n            border:\"1px solid black\",\r\n            margin:\"5px\",\r\n            boxShadow:\"rgba(0, 0, 0, 0.1) 0px 20px 25px -5px, rgba(0, 0, 0, 0.04) 0px 10px 10px -5px\",\r\n            height:`8vh`,\r\n            width:'8vw'\r\n        }\r\n        return(\r\n            <span>\r\n                <button style={myStyle} onClick={()=>this.props.handle(this.props.cellData.pos)}>{`${this.props.cellData.count}`}</button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cell","import React from 'react'\r\nimport Cell from './Cell'\r\n\r\nclass Row extends React.Component{\r\n    render(){\r\n        const cellList = this.props.rowData.map(cell => <Cell playersList={this.props.playersList} handle={this.props.handle} cellData={cell} key={cell.pos}/>)\r\n\r\n        return(\r\n            <div>{cellList}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Row","//{count:0,player:null,pos:(i*width+j)}\r\nexport default function chainReaction(newState,x,y){\r\n    multiply(newState,x,y)\r\n\r\n    return newState\r\n}\r\nfunction multiply(newState,x,y){\r\n    if(inBound(x,y,newState)) return\r\n    //set it to zero\r\n    //increment all neighbours\r\n    //mutiply all neighbours\r\n    const oldPlayer = newState[x][y].player\r\n\r\n    newState[x][y].count = 0\r\n    newState[x][y].player = null\r\n\r\n    const allNeighbours = getNeighbours(x,y)\r\n    for(let i=0;i<allNeighbours.length;i++){\r\n        let a = allNeighbours[i][0]\r\n        let b = allNeighbours[i][1]\r\n\r\n        newState[a][b].count++\r\n        newState[a][b].player = oldPlayer\r\n        multiply(newState,a,b)\r\n    }\r\n}\r\nfunction inBound(x,y,newState){\r\n    //case 1:corner pieces\r\n    if(\r\n        (x === 0 || x=== newState.length-1) &&\r\n        (y === 0 || y=== newState[0].length-1)\r\n    ) {\r\n        if(newState[x][y].count>1) return false\r\n    }\r\n    //case 2:borders\r\n    if(\r\n        (x===0 || x===newState.length -1) ||\r\n        (y===0 || y===newState[0].length-1)\r\n    ) {\r\n        if(newState[x][y].count>2) return false\r\n            \r\n    }\r\n    // case 3:center pieces\r\n    if(newState[x][y].count>3) return false\r\n\r\n    return true\r\n}\r\n\r\nfunction getNeighbours(x,y){\r\n    const allNeighbours = [\r\n        [x-1,y],\r\n        [x+1,y],\r\n        [x,y-1],\r\n        [x,y+1]\r\n    ]\r\n    const validNeighbours = allNeighbours.filter(unit=>{\r\n        if(checkValid(unit)){\r\n            return true\r\n        }\r\n        return false\r\n    })\r\n    return validNeighbours\r\n}\r\nfunction checkValid(unit){\r\n    let x=unit[0]\r\n    let y=unit[1]\r\n    if(x<0 || x>9) return false\r\n    if(y<0 || y>9) return false\r\n    return true\r\n}","import React from 'react'\r\nimport '../App.scss';\r\nimport initialState from './Data'\r\nimport Row from './Row.js'\r\nimport chainReaction from './chainReaction.js'\r\n\r\nclass Container extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.playersList=[\"shabbir\",\"abbas\"]\r\n        this.count=0\r\n        this.steps=0\r\n        this.win=false\r\n        this.state={\r\n            data:initialState,\r\n            player:this.playersList[0]\r\n        }\r\n        this.increment=this.increment.bind(this)\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.updatePlayer=this.updatePlayer.bind(this)\r\n    }\r\n    checkWin(){\r\n        var first_saw=null\r\n        for(let i=0;i<this.state.data.length;i++){\r\n            for(let j=0;j<this.state.data[0].length;j++){\r\n                if(this.state.data[i][j].player!=null){\r\n                    if(first_saw==null){\r\n                        first_saw = this.state.data[i][j].player\r\n                    } else{\r\n                        if(first_saw !==this.state.data[i][j].player){\r\n                            return\r\n                        }\r\n                    }\r\n                }   \r\n            }\r\n        }\r\n        if(first_saw!=null){\r\n            this.win =true\r\n        }\r\n        return\r\n    }\r\n    updatePlayer(){\r\n        this.count++\r\n        this.count=this.count%this.playersList.length\r\n        this.setState(prevState=>{\r\n            return{\r\n                ...prevState,\r\n                player:this.playersList[this.count]\r\n            }\r\n        })\r\n    }\r\n    handleChange(pos){\r\n        let x= Math.floor(pos/this.state.data[0].length)\r\n        let y= pos%this.state.data.length\r\n\r\n        if(!this.check(x,y,this.state.player)) return\r\n\r\n        this.increment(pos,this.state.player)\r\n\r\n        this.updatePlayer()\r\n    }\r\n    check(x,y,player){\r\n        if(this.state.data[x][y].player===null) return true\r\n        if(this.state.data[x][y].player===player) return true\r\n\r\n        return false\r\n    }\r\n    increment(pos,new_player){\r\n        this.steps++\r\n        if(this.steps>2){\r\n            this.checkWin()\r\n            if(this.win) return\r\n        }\r\n        if(this.win) return\r\n        var newState = this.state.data.map(row=>{\r\n            const newRow = row.map(cell=>{\r\n                return {\r\n                    ...cell\r\n                }\r\n            })\r\n            return newRow\r\n        })\r\n        \r\n        //checking whether incrementing it will cause chain reaction\r\n        let x= Math.floor(pos/this.state.data[0].length)\r\n        let y= pos%this.state.data.length\r\n\r\n        newState[x][y].count +=1\r\n        newState[x][y].player =new_player\r\n        chainReaction(newState,x,y)\r\n\r\n        this.setState( prevState => {\r\n            return {\r\n                ...prevState,\r\n                data:newState\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        const rowLists = this.state.data.map(row => <Row \r\n            playersList={this.playersList} \r\n            handle={this.handleChange} \r\n            rowData={row} \r\n            key={row[0].pos}\r\n        />)\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    {rowLists}\r\n                </div>\r\n                <h3>{this.win?\"Game Over\":this.state.player}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import './App.scss';\nimport React from 'react'\nimport Container from './component/Container'\n\nclass App extends React.Component {\n  render(){\n      return (\n        <div className=\"App\">\n          <Container />\n        </div>\n      )\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}